# THIS SPECIFIC FILE IS DISTRIBUTED UNDER THE UNLICENSE: http://unlicense.org.
# 
# YOU CAN FREELY USE THIS CODE EXAMPLE TO KICKSTART A PROJECT OF YOUR OWN.
# FEEL FREE TO REPLACE OR REMOVE THIS HEADER.
version: '3.7'
services:
  main:
    # Makefile fills PROJECT_NAME to current directory name.
    # add UID to allow multiple users run this in parallel
    container_name: ${PROJECT_NAME}_${HOST_UID:-4000}
    hostname: ${PROJECT_NAME}
    # These variables are passed into the container.
    environment:
      - UID=${HOST_UID:-4000}
    # Run with user priviliges by default.
    user: ${HOST_USER:-nodummy}
    image: ${PROJECT_NAME}:${HOST_USER:-nodummy}
    build:
      context: .
      # Build for current user.
      target: user
      dockerfile: Dockerfile
      # These variables are passed to Dockerfile.
      args:
        - HOST_UID=${HOST_UID:-4000}
        - HOST_USER=${HOST_USER:-nodummy}
        - PROJECT_NAME=${PROJECT_NAME}
    # Map volumes form host to container
    volumes:
      - ${PWD:-.}:/home/${HOST_USER}/${PROJECT_NAME}/
    # Run container as a service. Replace with something useful.
    command: ["rails", "s", "-p", "3333", "-e", "production"]
    # Espose ports to the HOST:OTHER_CONTAINERS
    ports:
      - 3333:3333
    # Set container depenpencies
    depends_on:
      - db
    # Set environment variables
    environment:
      RAILS_ENV: production
  db:
    image: postgres:11-alpine
    # These variables are passed into the container.
    # On EC2 instances root password is unset
    # POSTGRES_HOST_AUTH_METHOD=trust is needed for proper functionning
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    # Map volumes form host to container
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data: